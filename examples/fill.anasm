let FILLED sz8 1 .. 5

.entry
	let MSG1 sz8 "Created FILLED[0..4] filled with 1's\n(szof FILLED) = "
	psh @MSG1
	psh (szof MSG1)
	psh 1  # STDOUT
	wrf

	psh (szof FILLED)
	prt

	let MSG2 sz8 "FILLED[x] = "

	# Print 'FILLED[0] = '
	psh (+ @MSG2 7)  # Overwrite the string
	psh '0'
	w08
	cal @print_MSG2

	# Print FILLED[0]
	psh (+ @FILLED 0)
	r08
	prt

	# Print 'FILLED[1] = '
	psh (+ @MSG2 7)
	psh '1'
	w08
	cal @print_MSG2

	# Print FILLED[1]
	psh (+ @FILLED 1)
	r08
	prt

	# Print 'FILLED[2] = '
	psh (+ @MSG2 7)
	psh '2'
	w08
	cal @print_MSG2

	# Print FILLED[2]
	psh (+ @FILLED 2)
	r08
	prt

	psh 0  # Exit the program with exitcode 0
	hlt

.print_MSG2
	psh @MSG2
	psh (szof MSG2)
	psh 1
	wrf

	ret
