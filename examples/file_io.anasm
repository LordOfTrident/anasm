let NAME sz8  "a.txt" # File name
let FD   sz64 0

let TEXT sz8  "Hello, file!\n" # Text to write

let BUF_SIZE sz64 0
let BUF      sz8  0

.get_fd
	psh @FD
	r64

	ret

.set_fd
	psh @FD           # Save the file descriptor into a variable
	swp 0
	w64

	ret

.get_buf_size
	psh @BUF_SIZE
	r64

	ret

.set_buf_size
	psh @BUF_SIZE      # Save the file descriptor into a variable
	swp 0
	w64

	ret

.write_file_example
	psh @NAME         # Push the address of the string
	psh 5             # File name length
	psh 0b0010        # Write mode
	ope               # Open the file (returns a file ID)
	cal @set_fd

	psh 13            # Text length
	psh @TEXT
	cal @get_fd
	wrf

	cal @get_fd       # Close the file
	clo

	ret

.read_file_example
	psh @NAME         # Push the address of the string
	psh 5             # File name length
	psh 0b0001        # Read mode
	ope               # Open the file (returns a file ID)
	cal @set_fd

	cal @get_fd       # Size of the read
	szf
	cal @set_buf_size

	psh @BUF          # Address to write at
	cal @get_buf_size
	cal @get_fd
	rdf               # Read the file

	psh @BUF
	cal @get_buf_size
	psh 1             # STDOUT
	wrf

	cal @get_fd       # Close the file
	clo

	ret

.entry
	# write_file_example writes 'hi' into the file 'a.txt'
	cal @write_file_example

	# read_file_example reads from the file 'a.txt' and outputs the read
	# bytes in decimal integers. It also outputs a -1 after, which is the EOF
	cal @read_file_example
